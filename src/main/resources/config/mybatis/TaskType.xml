<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hmrz.mybatis.taskType">

	<select id="getTaskTypeList" parameterType="TaskTypeSearch" resultType="TaskTypeBean">
		select 	task_type_id,
				father_id,
				name,
				descript,
				create_time,
				create_user
				from S_TASK_TYPE
		<where>
			<if test="name != null and name != ''">
				name LIKE CONCAT('%',#{name},'%') AND
			</if>
			is_del = 0 AND
			father_id = #{father_id}
		</where>
		order by create_time desc
		<if test="havePage == 1">
            limit #{start},#{rows}
        </if>
	</select>
	
	<select id="getTaskTypeCount" parameterType="TaskTypeSearch" resultType="int" >
		select count(1) from S_TASK_TYPE
		<where>
			<if test="name != null and name != ''">
				name LIKE CONCAT('%',#{name},'%') AND
			</if>
			is_del = 0 AND
			father_id = #{father_id}
		</where>
	</select>
	
	<select id="getTaskTypeByID" parameterType="int" resultType="TaskTypeBean">
		select 	task_type_id,
				father_id,
				name,
				descript,
				create_time,
				create_user
				from S_TASK_TYPE
		WHERE task_type_id = #{task_type_id}
	</select>
	
	<insert id="addTaskType" parameterType="TaskTypeBean">
		insert into S_TASK_TYPE (father_id,name,descript,create_user)
		values ( #{father_id},#{name},#{descript},#{create_user} )
	</insert>
	
	<update id="updateTaskType" parameterType="TaskTypeBean">
		update S_TASK_TYPE set
		 father_id = #{father_id} ,
		 name = #{name} ,
		 descript = #{descript} 
		 where task_type_id = #{task_type_id}
	</update>
	
	
	<delete id="delTaskTypeAims" parameterType="int">
		delete from S_TASK_TYPE_AIM where task_type_id = #{task_type_id}
	</delete>
	
	<insert id="addTaskTypeAims" parameterType="HashMap">
		insert into S_TASK_TYPE_AIM (task_type_id,task_aim_id,sort,create_user) values 
		<foreach collection="task_type_aims" item="item" separator=","  index="index">
			 (#{task_type_id},#{item.task_aim_id},#{item.sort},#{create_user})
        </foreach>
	</insert>
	
	<select id="getTaskTypeAimsById" parameterType="int" resultType="HashMap">
		select stta.task_aim_id,stta.sort,sta.task_aim_name from S_TASK_TYPE_AIM stta left join S_TASK_AIM sta on
		stta.task_aim_id = sta.task_aim_id
		where stta.task_type_id = #{task_type_id}
	</select>
	
	<select id="getAllTaskAims" resultType="HashMap">
		select task_aim_id,task_aim_name from S_TASK_AIM
	</select>
	
	<select id="getTaskTypeBiz" parameterType="String" resultType="TaskTypeBean">
		SELECT 	task_type_biz_id as task_type_id,
				task_biz_id as father_id,
				name,
				descript
		FROM S_TASK_TYPE_BIZ
		<where>
			is_del = 0 AND
			task_biz_id = #{father_id}
		</where>
		order by create_time desc
	</select>
</mapper>