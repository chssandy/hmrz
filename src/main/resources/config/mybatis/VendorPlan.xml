<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hmrz.mybatis.vendorPlan">
    
    <select id="count" parameterType="VendorPlanSearch" resultType="int">
        SELECT
          COUNT(*)
        FROM c_plan cp
        WHERE cp.vendor_id = #{vendor_id}
        <if test="name != null and name !='' ">
          AND cp.name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="create_etime != null and create_etime !='' ">
          AND cp.create_time &lt; #{create_etime}
        </if>
        <if test="create_btime != null and create_btime !='' ">
          AND cp.create_time > #{create_btime}
        </if>
    </select>
    
    <select id="list" parameterType="VendorPlanSearch" resultType="VendorPlanBean">
        SELECT
		  cp.id,
		  cp.vendor_id,
		  cp.name,
		  (SELECT
		      COUNT(*)
		    FROM c_plan_point cpp
		    WHERE cpp.plan_id = cp.id
		    AND cpp.is_del = 0) AS point_nums,
		  (SELECT
		      COUNT(*)
		    FROM c_plan_point_record cppr
		    WHERE cppr.plan_id = cp.id
		    AND cppr.is_del = 0) AS total_monitor_nums,
		  (SELECT
		      COUNT(*)
		    FROM c_plan_point cpp
		    WHERE cpp.plan_id = cp.id
		    AND cpp.is_del = 0
		    AND cpp.record_nums > 0) AS monitor_point_nums,
		  (SELECT
		      COUNT(*)
		    FROM c_plan_point cpp
		    WHERE cpp.plan_id = cp.id
		    AND cpp.is_del = 0
		    AND cpp.is_abnormal = 1) AS abnormal_point_nums,
		  cp.create_time
		FROM c_plan cp
		WHERE cp.vendor_id = #{vendor_id}
		AND is_del = 0
		<if test="name != null and name !='' ">
          AND cp.name LIKE CONCAT('%', #{name}, '%')
        </if>
		<if test="create_etime != null and create_etime !='' ">
		  AND cp.create_time &lt; #{create_etime}
		</if>
		<if test="create_btime != null and create_btime !='' ">
          AND cp.create_time > #{create_btime}
        </if>
		<if test="havePage == 1">
            limit #{start},#{rows}
        </if>
    </select>
    
    <insert id="savePlan" parameterType="VendorPlanBean">
        INSERT INTO c_plan(vendor_id, name, create_user) VALUE(#{vendor_id}, #{name}, #{update_user})
    </insert>
    
    <update id="modify" parameterType="VendorPlanBean">
        UPDATE c_plan SET name = #{name}, update_user =#{update_user}, update_time = NOW() WHERE id = #{id}
    </update>
    
    <update id="del" parameterType="VendorPlanBean">
        UPDATE c_plan SET is_del = 1, update_user =#{update_user}, update_time = NOW() WHERE id = #{id}
    </update>
    
    <select id="listReleaseCalendar" parameterType="String" resultType="ReleaseCalendarBean">
        SELECT
		  ccr.id,
		  ccr.plan_id,
		  ccr.vendor_id,
		  ccr.start_day,
		  ccr.end_day,
		  ccr.create_time
		FROM c_calendar_release ccr
		WHERE ccr.plan_id = #{plan_id}
		AND ccr.is_del = 0
    </select>
    
    <insert id="addReleaseCalendar" parameterType="ReleaseCalendarBean">
        INSERT INTO c_calendar_release (plan_id, vendor_id, start_day, end_day,  create_user)
        VALUE(#{plan_id}, #{vendor_id}, #{start_day}, #{end_day}, #{operator})
    </insert>
    
    <update id="delReleaseCalendar" parameterType="ReleaseCalendarBean">
        UPDATE c_calendar_release SET is_del = 1, update_user= #{operator} WHERE id= #{id}
    </update>
    
    <select id="listMonitorCalendar" parameterType="String" resultType="MonitorCalendarBean">
        SELECT
          ccm.id,
          ccm.plan_id,
          ccm.vendor_id,
          ccm.start_day,
          ccm.end_day,
          ccm.create_time
        FROM c_calendar_monitor ccm
        WHERE ccm.plan_id = #{plan_id}
        AND ccm.is_del = 0
    </select>
    
    <insert id="addMonitorCalendar" parameterType="MonitorCalendarBean">
        INSERT INTO c_calendar_monitor (plan_id, vendor_id, start_day, end_day,  create_user)
        VALUE(#{plan_id}, #{vendor_id}, #{start_day}, #{end_day}, #{operator})
    </insert>
    
    <update id="delMonitorCalendar" parameterType="MonitorCalendarBean">
        UPDATE c_calendar_monitor SET is_del = 1, update_user= #{operator} WHERE id= #{id}
    </update>
    
    <select id="countPlanPoint" parameterType="PlanPointSearch" resultType="int">
        SELECT
		  COUNT(*)
		FROM c_plan_point cpp,
		     db_space ds
		WHERE cpp.plan_id = #{plan_id}
		AND cpp.point_id = ds.space_id
		AND cpp.is_del = 0
		<if test="province_id != null and province_id !='' and province_id !='-1'">
          AND ds.province_code = #{province_id}
        </if>
        <if test="city_id != null and city_id !='' and city_id !='-1' ">
          AND ds.city_code = #{city_id}
        </if>
        <if test="is_abnormal != null and is_abnormal !='' ">
          AND cpp.is_abnormal = #{is_abnormal}
        </if>
        <if test="address != null and address !='' ">
          AND ds.address LIKE CONCAT('%', #{address}, '%')
        </if>
    </select>
    
    <select id="listPlanPoint" parameterType="PlanPointSearch" resultType="PlanPointBean">
	    SELECT
		  cpp.id,
		  xc.province_name AS province,
		  xc.city_name AS city,
		  ds.address,
		  (SELECT
		      dmt.name
		    FROM db_media_type dmt
		    WHERE dmt.media_type_id = ds.first_type) AS first_type,
		  (SELECT
		      dmt.name
		    FROM db_media_type dmt
		    WHERE dmt.media_type_id = ds.type) AS second_type,
		  ds.position,
		  cpp.record_nums,
		  cpp.abnormal_nums,
		  cpp.is_abnormal
		FROM c_plan_point cpp,
		     db_space ds,
		     xt_city xc
		WHERE cpp.plan_id = #{plan_id}
		AND cpp.point_id = ds.space_id
		AND cpp.is_del = 0
		AND xc.province_code = ds.province_code
		AND xc.city_code = ds.city_code
		AND xc.city_level = 4
		<if test="province_id != null and province_id !='' and province_id !='-1'">
          AND ds.province_code = #{province_id}
        </if>
        <if test="city_id != null and city_id !='' and city_id !='-1' ">
          AND ds.city_code = #{city_id}
        </if>
        <if test="is_abnormal != null and is_abnormal !='' ">
          AND cpp.is_abnormal = #{is_abnormal}
        </if>
        <if test="address != null and address !='' ">
          AND ds.address LIKE CONCAT('%', #{address}, '%')
        </if>
        <if test="havePage == 1">
            limit #{start},#{rows}
        </if>
    </select>
    
    <insert id="addPlanPoint" parameterType="PlanPointBean">
        INSERT INTO c_plan_point(plan_id, point_id, create_user)
        VALUE(#{plan_id}, #{point_id}, #{operator})
    </insert>
    
    <update id="delPlanPoint" parameterType="PlanPointBean">
        UPDATE c_plan_point SET is_del = 1, update_user= #{operator} WHERE id= #{id}
    </update>
    
    <select id="countPointTask" parameterType="PlanPointTaskSearch" resultType="int">
        SELECT
		  COUNT(*)
		FROM c_plan_point_record cppr,
		     s_monitor sm,
		     s_monitor_execute sme
		WHERE cppr.point_id = #{point_id}
		AND cppr.task_id = sm.task_id
		AND cppr.is_del = 0
		AND cppr.execute_id = sme.execute_id
		AND sme.task_id = cppr.task_id
		<if test="task_btime != null and task_btime !=''">
		  AND sm.show_btime >= #{task_btime}
		</if>
		<if test="task_etime != null and task_etime !=''">
          AND sm.show_btime &lt;= #{task_etime}
        </if>
		<if test="execute_btime != null and execute_btime !=''">
          AND sme.submit_time >= #{execute_btime}
        </if>
		<if test="execute_etime != null and execute_etime !=''">
          AND sme.submit_time &lt;= #{execute_etime}
        </if>
		<if test="task_id != null and task_id !='' ">
          AND cppr.task_id = #{task_id}
        </if>
        <if test="execute_id != null and execute_id !=''">
          AND cppr.execute_id = #{execute_id}
        </if>
        <if test="is_abnormal != null and is_abnormal !=''">
          AND cppr.is_abnormal = #{is_abnormal}
        </if>
    </select>
    
    <select id="listPointTask" parameterType="PlanPointTaskSearch" resultType="PlanPointTaskBean">
        SELECT
		  cppr.id,
		  cppr.plan_id,
		  cppr.point_id,
		  cppr.task_id,
		  sm.name AS task_name,
		  sm.show_btime AS task_time,
		  cppr.execute_id,
		  sme.submit_time AS execute_time,
		  cppr.is_abnormal,
		  cppr.create_user,
		  sb.brand_name AS brand
		FROM c_plan_point_record cppr,
		     s_monitor sm,
		     s_brand sb,
		     s_monitor_execute sme
		WHERE cppr.point_id = #{point_id}
		AND cppr.task_id = sm.task_id
		AND cppr.is_del = 0
		AND sb.brand_id = sm.brand_id
		AND cppr.execute_id = sme.execute_id
		AND sme.task_id = cppr.task_id
		<if test="task_btime != null and task_btime !=''">
          AND sm.show_btime >= #{task_btime}
        </if>
        <if test="task_etime != null and task_etime !=''">
          AND sm.show_btime &lt;= #{task_etime}
        </if>
        <if test="execute_btime != null and execute_btime !=''">
          AND sme.submit_time >= #{execute_btime}
        </if>
        <if test="execute_etime != null and execute_etime !=''">
          AND sme.submit_time &lt;= #{execute_etime}
        </if>
        <if test="task_id != null and task_id !=''">
          AND cppr.task_id = #{task_id}
        </if>
        <if test="execute_id != null and execute_id !=''">
          AND cppr.execute_id = #{execute_id}
        </if>
        <if test="is_abnormal != null and is_abnormal !=''">
          AND cppr.is_abnormal = #{is_abnormal}
        </if>
        <if test="havePage == 1">
            limit #{start},#{rows}
        </if>
    </select>
    
    <select id="countPointTaskChoose" parameterType="PointTaskChooseSearch" resultType="int">
        SELECT
          COUNT(*)
        FROM s_monitor sm,
             s_monitor_execute sme,
             app_user au
        WHERE sm.task_id = sme.task_id
        AND sm.is_del = 0
        AND sme.status = 4
        AND sm.status = 4
        AND sme.is_history = 0
        AND sme.executor = au.user_id
        <if test="task_id != null and task_id !=''">
            AND sm.task_id = #{task_id}
        </if>
        <if test="execute_id != null and execute_id !=''">
            AND sme.execute_id = #{execute_id}
        </if>
        <if test="task_type != null and task_type !='' and task_type !='-1'">
            AND sm.task_type_id = #{task_type}
        </if>
        <if test="executor != null and executor !=''">
            AND au.moble = #{executor}
        </if>
        <if test="task_name != null and task_name !=''">
            AND sm.name LIKE CONCAT('%', #{task_name}, '%')
        </if>
        <if test="point_id != null and point_id !=''">
            AND NOT EXISTS (SELECT
	            *
	          FROM c_plan_point_record cppr
	          WHERE cppr.point_id = #{point_id}
	          AND cppr.task_id = sm.task_id
	          AND cppr.execute_id = sme.execute_id
	          AND cppr.is_del = 0)
        </if>
    </select>
    
    <select id="listPointTaskChoose" parameterType="PointTaskChooseSearch" resultType="PointTaskChooseBean">
        SELECT
          sm.task_id,
          sme.execute_id,
          sm.name AS task_name,
          cv.vendor_name,
          stt.name AS task_type,
          au.moble AS executor,
          sme.submit_time
        FROM s_monitor sm,
             s_monitor_execute sme,
             s_task_type stt,
             app_user au,
             c_vendor cv
        WHERE sm.task_id = sme.task_id
        AND sm.is_del = 0
        AND sme.status = 4
        AND sm.status = 4
        AND sm.task_type_id = stt.task_type_id
        AND sme.is_history = 0
        AND sme.executor = au.user_id
        AND cv.vendor_id = sm.vendor_id
        <if test="task_id != null and task_id !=''">
            AND sm.task_id = #{task_id}
        </if>
        <if test="execute_id != null and execute_id !=''">
            AND sme.execute_id = #{execute_id}
        </if>
        <if test="task_type != null and task_type !='' and task_type !='-1'">
            AND sm.task_type_id = #{task_type}
        </if>
        <if test="executor != null and executor !=''">
            AND au.moble = #{executor}
        </if>
        <if test="task_name != null and task_name !=''">
            AND sm.name LIKE CONCAT('%', #{task_name}, '%')
        </if>
        <if test="point_id != null and point_id !=''">
            AND NOT EXISTS (SELECT
                *
              FROM c_plan_point_record cppr
              WHERE cppr.point_id = #{point_id}
              AND cppr.task_id = sm.task_id
              AND cppr.execute_id = sme.execute_id
              AND cppr.is_del = 0)
        </if>
        <if test="havePage == 1">
            limit #{start},#{rows}
        </if>
    </select>
    
    <insert id="addPointTask" parameterType="PlanPointTaskBean">
        INSERT INTO c_plan_point_record (plan_id, point_id, task_id, execute_id, is_abnormal, create_user)
		SELECT
		  '${plan_id}' AS plan_id,
		  '${point_id}' AS point_id,
		  sme.task_id,
		  sme.execute_id,
		  IFNULL(sme.is_passed, 0),
		  '${operator}' AS create_user
		FROM s_monitor_execute sme
		WHERE sme.execute_id = #{execute_id}
		AND sme.status = 4
    </insert>
    
    <update id="updatePointData" parameterType="String">
        UPDATE c_plan_point cpp
		SET cpp.record_nums = (SELECT
		        COUNT(*)
		      FROM c_plan_point_record cppr
		      WHERE cppr.point_id = cpp.id
		      AND cppr.is_del = 0),
		    cpp.abnormal_nums = (SELECT
		        COUNT(*)
		      FROM c_plan_point_record cppr
		      WHERE cppr.point_id = cpp.id
		      AND cppr.is_del = 0
		      AND cppr.is_abnormal = 1),
		    cpp.is_abnormal = (SELECT
		        IFNULL(cppr.is_abnormal, 0)
		      FROM c_plan_point_record cppr
		      WHERE cppr.point_id = cpp.id
		      AND cppr.is_del = 0
		      ORDER BY cppr.create_time DESC
		      LIMIT 0, 1)
		WHERE cpp.id = #{id}
    </update>
    
    <update id="delPointTask" parameterType="PlanPointTaskBean">
        UPDATE c_plan_point_record SET is_del = 1, update_user = #{operator}, update_time = NOW() WHERE id = #{id}
    </update>
</mapper>