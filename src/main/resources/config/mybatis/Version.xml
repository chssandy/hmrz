<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hmrz.mybatis.version">

	<select id="getVersionList" parameterType="VersionSearch" resultType="VersionBean">
        SELECT
        	AV.version_id,
			AV.app_name,
			AV.app_version,
			AV.version_num,
			AV.size,
			AV.description,
			AV.app_file,
			AV.app_url,
			AV.create_time,
			AV.is_force,
			AV.is_audit
        FROM 
        	APP_VERSION AV
        WHERE
            AV.is_del = 0
        <if test="type != null and type != ''">
            AND AV.phone_type = #{type}
        </if>
        <if test="version_num > 0">
		    AND AV.version_num = #{version_num}
	    </if>
        ORDER BY AV.version_id desc
        <if test="havePage == 1">
        	LIMIT #{start} , #{rows}
        </if>   
	</select>
	
	<select id="getVersionCount" parameterType="VersionSearch" resultType="int">
        SELECT
        	count(AV.version_id)
        FROM 
        	APP_VERSION AV
        WHERE
            AV.is_del = 0
        <if test="type != null and type != ''">
            AND AV.phone_type = #{type}
        </if>
        <if test="version_num > 0">
		    AND AV.version_num = #{version_num}
	    </if>
	</select>
    
    <insert id="addAppVersion" parameterType="VersionBean" useGeneratedKeys="true" keyProperty="version_id">
        INSERT INTO APP_VERSION (
        	app_name,
        	app_version,
        	version_num,
			size,
			description,
			app_file,
			app_url,
			create_user,
			phone_type,
			is_force,
			is_audit
        )
        VALUES 
        (#{app_name,jdbcType=VARCHAR}, 
         #{app_version,jdbcType=VARCHAR},
         #{version_num,jdbcType=INTEGER},
         #{size,jdbcType=VARCHAR}, 
         #{description,jdbcType=VARCHAR}, 
         #{app_file,jdbcType=VARCHAR},
         #{app_url,jdbcType=VARCHAR},
         #{create_user,jdbcType=VARCHAR},
         #{phone_type,jdbcType=VARCHAR},
         #{is_force,jdbcType=VARCHAR},
         0)
    </insert>
    
    <update id="delAppVersion" parameterType="java.util.Map">
		UPDATE APP_VERSION AV set AV.is_del = 1	
		WHERE AV.version_id in
		<foreach collection="id" item="item"  separator="," open="(" close=")">
			(#{item,jdbcType=VARCHAR})
        </foreach>
	</update>
	
	<select id="version" parameterType="VersionSearch" resultType="VersionBean">
        SELECT
        	AV.version_id,
			AV.app_name,
			AV.app_version,
			AV.version_num,
			AV.size,
			AV.description,
			AV.app_file,
			AV.app_url,
			AV.create_time,
			AV.is_audit,
			<if test="version_num != null and version_num != ''">
				(SELECT case when sum(AV1.is_force)>=1 then 1 else 0 end  
				 FROM  APP_VERSION AV1 where AV1.is_del = 0 and AV1.phone_type = AV.phone_type 
	               AND AV1.version_num > #{version_num,jdbcType=INTEGER}
				)as is_force
			</if>
			<if test="version_num == null or version_num == ''">
		    	1
		    </if>
        FROM 
        	APP_VERSION AV
        WHERE
            AV.is_del = 0
            <if test="type != null and type != ''">
	            AND AV.phone_type = #{type}
	        </if>
        ORDER BY AV.version_id desc
        LIMIT 0 , 1
	</select>
	
	<update id="auditAppVersion" parameterType="java.util.Map">
		UPDATE APP_VERSION AV set AV.is_audit = #{is_audit}
		WHERE AV.version_id =#{version_id}
	</update>
	
</mapper>